{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport OrdersScreen from \"./screens/OrdersScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#5C6BC0',\n    accent: '#FF5722',\n    background: '#F5F5F5',\n    surface: '#FFFFFF',\n    text: '#212121',\n    error: '#D32F2F'\n  })\n});\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Cart') {\n            iconName = focused ? 'cart' : 'cart-outline';\n          } else if (route.name === 'Orders') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        tabBarStyle: {\n          elevation: 10,\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.3,\n          shadowRadius: 3,\n          borderTopWidth: 0,\n          paddingTop: 5,\n          height: 60\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '600',\n          marginBottom: 5\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.primary\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Cart\",\n      component: CartScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Orders\",\n      component: OrdersScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(PaperProvider, {\n    theme: theme,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabNavigator,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Product\",\n          component: ProductScreen,\n          options: function options(_ref3) {\n            var route = _ref3.route;\n            return {\n              title: route.params.name,\n              headerStyle: {\n                backgroundColor: theme.colors.primary\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold'\n              }\n            };\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","StatusBar","NavigationContainer","createStackNavigator","createBottomTabNavigator","Ionicons","Provider","PaperProvider","DefaultTheme","LinearGradient","LoginScreen","HomeScreen","ProductScreen","CartScreen","OrdersScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","theme","_objectSpread","colors","primary","accent","background","surface","text","error","Stack","Tab","MainTabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","borderTopWidth","paddingTop","tabBarLabelStyle","fontSize","fontWeight","marginBottom","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","children","Screen","component","App","style","initialRouteName","options","headerShown","_ref3","title","params"],"sources":["/Users/prathamsharma/Documents/test applications/openwork/openwork-platform/frontend/customer-app/App.js"],"sourcesContent":["import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { LinearGradient } from 'expo-linear-gradient';\n\n// Screens\nimport LoginScreen from './screens/LoginScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport OrdersScreen from './screens/OrdersScreen';\nimport ProfileScreen from './screens/ProfileScreen';\n\n// Custom theme\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#5C6BC0',\n    accent: '#FF5722',\n    background: '#F5F5F5',\n    surface: '#FFFFFF',\n    text: '#212121',\n    error: '#D32F2F',\n  },\n};\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MainTabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Cart') {\n            iconName = focused ? 'cart' : 'cart-outline';\n          } else if (route.name === 'Orders') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        tabBarStyle: { \n          elevation: 10,\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 2 },\n          shadowOpacity: 0.3,\n          shadowRadius: 3,\n          borderTopWidth: 0,\n          paddingTop: 5,\n          height: 60\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '600',\n          marginBottom: 5\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.primary,\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Cart\" component={CartScreen} />\n      <Tab.Screen name=\"Orders\" component={OrdersScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <PaperProvider theme={theme}>\n      <StatusBar style=\"light\" />\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Login\">\n          <Stack.Screen \n            name=\"Login\" \n            component={LoginScreen} \n            options={{ headerShown: false }}\n          />\n          <Stack.Screen \n            name=\"Main\" \n            component={MainTabNavigator} \n            options={{ headerShown: false }}\n          />\n          <Stack.Screen \n            name=\"Product\" \n            component={ProductScreen}\n            options={({ route }) => ({ \n              title: route.params.name,\n              headerStyle: {\n                backgroundColor: theme.colors.primary,\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold',\n              },\n            })}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}